依旧是典型的dp，第一遍没考虑优化

class Solution {
    public int minPathSum(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[][] dp = new int[m][n];
        // dp[0][0] = grid[0][0];
        // for(int i=1; i<n; ++i)  dp[0][i] = grid[0][i];
        // for(int i=1; i<n; ++i)  dp[i][0] = grid[i][0];
        for(int i=0; i<m; ++i){
            for(int j=0; j<n; ++j){
                if(i == 0 && j == 0){
                    dp[i][j] = grid[i][j];
                    continue;
                }
                if(i >= 1 && j >= 1){
                    dp[i][j] = Math.min(dp[i-1][j], dp[i][j-1]) + grid[i][j];
                }else if(i == 0){
                    dp[i][j] = dp[i][j-1] + grid[i][j];
                }else{
                    dp[i][j] = dp[i-1][j] + grid[i][j];
                }
            }
        }
        return dp[m-1][n-1];
    }
}