二叉树的递归操作很不熟悉，这种简单题做过还是磕磕绊绊。
我总结一下这种二叉树的操作，就是首先要明白题目的含义，这样才能清楚的设计出递归算法。
如题所示，一颗对称的二叉树的显著特点是什么，就是对于树中的每一个节点，其左右子树都是对称的，不光要子树内对称，还要两子树相互对称。这就引出了递归的思想，在根节点来看这颗树是否是对称树是无法做到的，因为他只能看到根节点本身和根节点的左右子节点。所以我们先做判断，特判是左右都为null，那么返回true。其次是两者任一为null或是不等，返回false（注意，我上面说的这些既是在以根节点为例子，同时也适用于后面以任一节点作为根节点去理解，这也是递归函数的特性）。最后还有一个判断，就是此时left和right相等，那这个时候就从当前root来看是很好的，就像往成功又迈出了一步，但是仍然无法确定是否为对称二叉树，此时要判断的是left的left和right的right并上left的right和right的left（这点也是本题的关键所在），做完了如上判断，本题才算结束。

递归就是在寻找问题中重复的子问题，这点又在分治，动态规划中见过，暂时没有总结出很好的知识点，以后再总结吧。