class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        Map<Integer, Integer> map = new HashMap<>();
        for(int i=0; i<inorder.length; ++i){
            map.put(inorder[i],i);
        }
        return build(0, 0, inorder.length-1, preorder, inorder, map);
    }
    private TreeNode build(int index, int left, int right, int[] preorder, int[] inorder, Map<Integer, Integer> map){
        if(left > right)
            return null;
        int curIndex = map.get(preorder[index]);
        TreeNode root = new TreeNode(preorder[index]);
        root.left = build(index+1, left, curIndex-1, preorder, inorder, map);
        root.right = build(index+curIndex-left+1, curIndex+1, right, preorder, inorder, map);
        return root;
    }
}