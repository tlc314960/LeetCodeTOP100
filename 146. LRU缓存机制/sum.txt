这道题是一道数据结构的模拟题，根据题意就是要实现一格LRU的数据结构。
具体LRU定义不再赘述，主要讲一下写的时候自己的错误。
1.不知道使用什么样的数据结构去完成题目要求。
get put的时间复杂度为1，这就让我们想到了hashmap，但是这题是LRU的概念，涉及到了一个元素在集合中的排序，不被使用的元素要便于被删除。
这个就是单独的hashmap无法实现的，因为hashmap是无序的，并不知道集合中的顺序。
那有没有有序的hashmap呢，就是linkedhashmap，此题就可以使用这个数据结构去解决。
但是作为练习，我选择了使用一个双向链表（类似linkedlist）和一个hashmap去实现。
其实这也是linkedhashmap的简略版。
hashmap的key存每一个节点的key，val则为每一个对应节点（不存val，因为要与双向链表映射）。
双向链表存这个数据结构的主要顺序，当对其中某一个实行get或者是put去更新一个旧元素时。
就可以通过hashmap的对应key找到node，然后将node更新到双向链表的表头（这就是LRU的操作）。


