class Solution {
    public int largestRectangleArea(int[] heights) {
        int res = 0;
        int len = heights.length;
        if(len == 0)
            return res;
        if(len == 1)
            return heights[0];
        Deque<Integer> temp = new ArrayDeque<>();

        for(int i=0; i<len; ++i){
            while(!temp.isEmpty() && heights[i] < heights[temp.peekLast()]){
                int cur = heights[temp.pollLast()];
                while(!temp.isEmpty() && heights[temp.peekLast()] == cur){
                    temp.pollLast();
                }
                if(temp.isEmpty()){
                    res = Math.max(res, i*cur);
                }else{
                    res = Math.max(res, (i-temp.peekLast()-1)*cur);
                }
                
            }
            temp.offerLast(i);
        }
        int curIndex = temp.peekLast();
        while(!temp.isEmpty()){  
            int cur = heights[temp.pollLast()];
            while(!temp.isEmpty() && heights[temp.peekLast()] == cur){
                temp.pollLast();
            }
            if(temp.isEmpty()){
                res = Math.max(res, len*cur);
            }else{
                res = Math.max(res, (len-temp.peekLast()-1)*cur);
            }
        }
        return res;
    }
}