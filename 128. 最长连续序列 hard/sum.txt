这题有简单的思路，就是用数组排序，因为题意是要寻找数组中的最大连续字串，而且这个字串所谓的连续只是要求数值连续，并不要求数组中的位置也是连续的，换而言之就是只要我数组中存在连续的两个元素值，哪怕这两个元素中间隔了十万八千里，这也是连续的。
若不先排序数组，找连续的时候就要每次都去遍历一次数组才可以，这就导致时间复杂度的上升，所以先排序一遍数组。排序完思路就比较清晰了，要注意的地方就是当数组中出现重复元素的时候，判断时不要直接将连续的长度置为1，这时候先保持原长度，等到某次碰到非重复元素的时候再判断。这种算法的时间复杂度时nlogn，不符合题目的要求。

下面是一种哈希表的写法。HashSet可以先保存这个数组里的所有元素到set中，因为Set的查询用时是1级别的，所以就解决了暴力方法中遇到的要寻找元素需要遍历数组的问题。

最后是并查集的解法，并查集的解法很长时间不看生疏了，实际上并查集的定义并不困难，在这也不叙述定义了。主要关注并查集的两个操作，一个是find查找hashmap任一key的root在哪，第二个是join，合并任一两个key将他们并到一个集里面，这道题的join要达到返回前面的key的集的大小。所以要多出来一个count的map存储每一个key对应的集的大小。